// ********************************************************************************
// File automatically generated by MultiMech Suite(TM)
//
// Copyright (C) 2014 MultiMech Research and Development, LLC. All rights reserved.
//
// Any redistribution or reproduction of part or all of the contents in any form is
// prohibited. You may not, except with our express written permission, distribute 
// or commercially exploit the content. Nor may you transmit it or store it in any 
// other website or other form of electronic retrieval system.
// ********************************************************************************

Function FindMyViews
    myNbViews = 0;
    myDisplacementView = -1;
    myPotentialView = -1;
    For i In {0:PostProcessing.NbViews-1}
        If( StrFind(View[i].Name, myViewSuffix) )
            myViews[myNbViews] = i;
            myNbViews++;
            If( StrFind(View[i].Name, "Displacement") )
                myDisplacementView = i;
                View[i].VectorType = 5;
            EndIf
            If( StrFind(View[i].Name, "Potential") )
                myPotentialView = i;
            EndIf
        EndIf
    EndFor
Return

Function FindMyViewsForField
    myNbViews = 0;
    For i In {0:PostProcessing.NbViews-1}
        If( StrFind(View[i].Name, myVisibleFieldName) )
            myViews[myNbViews] = i;
            myNbViews++;
        EndIf
    EndFor
Return

Function SetupMyViews
    Call FindMyViews;
    For i In {0:myNbViews-1}
        myId = myViews[i];
        View[myId].Visible = 0;
        View[myId].LineType = 1;
        View[myId].LineWidth = 3.0;
        View[myId].ShowTime = 2;
        If( myDisplacementView > -1 )
            View[myId].UseGeneralizedRaise = 1;
            View[myId].GeneralizedRaiseView = myDisplacementView;
        EndIf
        If( StrFind(View[myId].Name, myVisibleViewName) )
            View[myId].Visible = 1;
        EndIf
    EndFor
Return

Function SetupCustomLegendForField
    Max = -1e20;
    Min = +1e20;
    Call FindMyViewsForField;
    For i In {0:myNbViews-1}
        myId = myViews[i];
        If( Max < View[myId].Max )
            Max = View[myId].Max;
        EndIf
        If( Min > View[myId].Min )
            Min = View[myId].Min;
        EndIf
    EndFor
    For i In {0:myNbViews-1}
        myId = myViews[i];
        View[myId].RangeType = 2;
        View[myId].CustomMax = Max;
        View[myId].CustomMin = Min;
        If( !StrFind(View[myId].Name, "_sc0") )
            View[myId].ShowScale = 0;
        EndIf
    EndFor
Return

